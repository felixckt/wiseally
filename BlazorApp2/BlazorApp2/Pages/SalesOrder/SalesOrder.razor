@page "/SalesOrder"
@inject HttpClient http
@inject IJSRuntime js
@using ModelClass.Model
<h3>SalesOrder</h3>

<div>
    <a class="btn btn-success" href="SalesOrder/Create">New Order</a>
</div>

@if (salesorders == null)
{
    <text> Loading... </text>
}
else if (salesorders.Length == 0)
{
    <text> There are no records in the data </text>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Sales Order ID</th>
                <th>Ship Date</th>
                <th>Ship Method</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var salesorders in salesorders)
            {
                <tr>
                    <td>
                        <a class="btn btn-success" href="EditSalesOrder/@salesorders.SalesOrderID">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => DeleteSalesOrder(salesorders.SalesOrderID))">Delete</button>
                    </td>
                    <td>@salesorders.SalesOrderID.</td>
                    <td>@salesorders.ShipDate</td>
                    <td>@salesorders.ShipMethod</td>

                </tr>
            }
        </tbody>

    </table>
};


@code {

    ModelClass.Model.SalesOrder[] salesorders { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadSalesOrder();
    }

    async Task LoadSalesOrder()

    {
        salesorders = await http.GetJsonAsync<ModelClass.Model.SalesOrder[]>("https://wacrmwebservice.azurewebsites.net/api/SalesOrderHeaders");
    }

    async Task DeleteSalesOrder(int salesorderid)
    {
        //await js.DisplayMessage("my title", "My message", SweetAlertMessageType.success);
        //var personSelected = people.First(x => x.Id == personId);

        //if (await js.Confirm("Confirm", $"Do you want to delete {personSelected.Name}?", SweetAlertMessageType.question))
        {
            await http.DeleteAsync($"https://wacrmwebservice.azurewebsites.net/api/SalesOrderHeaders/{salesorderid}");
            await LoadSalesOrder();
         //   await LoadPeople();
        }
    }
}
